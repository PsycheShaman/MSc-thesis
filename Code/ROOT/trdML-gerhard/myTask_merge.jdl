# Generated merging jdl                     
# $1 = full alien path to output directory to be merged                     
# $2 = merging stage                     
# xml made via: find <OutputDir> *Stage<n-1>/*root_archive.zip
Jobtag = {
   "comment:Automatically generated analysis JDL_Merging"
};
# Collection of files to be merged for current stage
InputDataCollection = {
   "LF:$1/Stage_$2.xml,nodownload"
};
# Output directory
OutputDir = "$1/Stage_$2/#alien_counter_03i#";
# List of requested packages
Packages = {
   "VO_ALICE@AliPhysics::vAN-20180902-1",
   "VO_ALICE@APISCONFIG::V1.1x"
};
# List of input files to be uploaded to workers
InputFile = {
   "LF:/alice/cern.ch/user/c/cviljoen/wd/myTask_merge.C",
   "LF:/alice/cern.ch/user/c/cviljoen/wd/myTask.root",
   "LF:/alice/cern.ch/user/c/cviljoen/wd/AliTRDdigitsExtract.cxx",
   "LF:/alice/cern.ch/user/c/cviljoen/wd/AliTRDdigitsExtract.h"
};
# This is the startup script
Executable = "/alice/cern.ch/user/c/cviljoen/wd/myTask_merge.sh";
# We split per SE for merging in stages
Split = "se";
# Time after which the job is killed (333 min.)
TTL = "20000";
# Maximum number of input files to be merged in one go
SplitMaxInputFileNumber = "100";
# Format of input data
InputDataListFormat = "xml-single";
# Collection name to be processed on each worker node
InputDataList = "wn.xml";
# List of output files and archives
Output = {
   "log_archive.zip:stdout,stderr,pythonDict.txt",
   "root_archive.zip:DigitsExtractQA*.root"
};
Arguments = "wn.xml $2";
# AliEn price for this job
Price = "1";
# Validation script to be run for each subjob
Validationcommand = "/alice/cern.ch/user/c/cviljoen/wd/myTask_validation_merge.sh";
User = "cviljoen";
Workdirectorysize = {"5000MB"};
# JDL variables
JDLVariables = 
{
   "Packages",
   "OutputDir"
};
Workdirectorysize = {"5000MB"};
